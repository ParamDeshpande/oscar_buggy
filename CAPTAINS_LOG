3/02/2020
Starting with GIMBAL control codes.

A good website to start with 'apart from wiki'
http://www.olliw.eu/2013/storm32bgc/

23/02/2020
Added code for gimbal controls in .ino and .py.
    
11/03/2020
9.40 PM
Resuming testing Gimbal code.

12/03/2020
8.59PM
Fixed VSCODE arduino and platformIO, installed STM32 Programmer added as a path to environment variable.
STM32 blinky blinky code works good with ARDUINO extension. PlatformIO not tested, neither willing COZ of 
MAVLINK codes ? 
Maybe I might PORT the CODES. Might !
Currently soldering UART PINS on the Storm32.

13/03/2020
5.56PM 
 
 Still busy trying to figure out MAVLINK codes ,

 Maybe the code i downloaded was firmware code for the STORM32 and not for arduino or any other microcontroller. 
 
 USed FTDI for STORM32 connected well But has version 0.90
 Latest is 2.xx Older version is no longer supported by newer oliwells GUI (Windows) 
 Will be installating older GUI, to see if I can PAN / steer GIMBAL Then move to upgrading and inverting GIMBAL with {fingers cross} newer firmware.
 Shifted to windows for ease of WORK (Sed) bcoz installation is difficult on linux.

 Found a nice design quote 
 "An important thing to look for in a gimbal is how this attachment is done. The little rubber balls commonly used for this suspension are designed to work in compression not tension. What that means is that the gimbal should hang on the balls not from them."
 ie The gimbal used in this project *should* be inverted. For better vibration cancelling response.
 src https://www.rcgroups.com/forums/showthread.php?2818200-Gimbals-101

14/03/20
8.10 PM

Gimbal Scripts STORM32
For understanding the internal working one should realize, that the STorM32 controller code is essentially an endless loop, which is triggered and repeated every 1.5 ms.
src http://www.olliw.eu/storm32bgc-wiki/STorM32_Scripts

MAVLink_Communication
The baudrate of the selected serial port is determined by the respective baudrate parameter in the [GUI:Expert] tab. Per default it is 115200 bps. It is recommended to use a baudrate of 230400 bps, if possible.
src http://www.olliw.eu/storm32bgc-wiki/MAVLink_Communication

Later I will need to do pass through mavlink tunneling ie 
Accessing the gimbalGUI connection to GUI **through** a MCU/(or a autopilot etc..) coz GIMBAL is clamped DOWN to the SYSTEM (DRONE ETC.)

16/03/20
12.48PM 

Tested motion control via GUI now moving to STM32 CODE simple UART MAVLINK SWEEP CODE.

2.20 PM 
Trying D2 and D8 as first attempt for STM32 UART via arduino.
Now in elementary, Arduino / maple leaf leaflabs resources really suck at telling which port is port 2 and which port is port 3 and their respective pins.
Had to dig deep into platformio core to see the definitions now trying to test them.

5.17 PM 
Finally. 
Managed to fix the 2 uart ISSUE, NOW can communicate via two UARTS. 
Also the GIMBAL code compiled using platformIO.

11.58PM
Managed to control gimbal (hanging) from STM32 using MAVLINK codes.
Will move to inverting and FINE tuning after I get a hold of GOPRO camera.

3/04/20
3.23PM

Managed to invert the gimbal successfully , couldn't upgrade the FIRMWARE, still the firmware is V.90.

14/04/20 
4.11 PM
Completed the Visual perception course much needed for this project, now moving to get the director module path, extracting from perl gimbal Scripts.
4.27 PM
S1 ) The test director profile 
The simplest director profile called test_case_around_the_world. The buggy wil complete one rotation around the football with radius such that area of the bounding box is constant.

S2 ) Getting the bounding boxes.
I will be tinkering with tensorflow today, once satisfied with familiarity move to getting bboxes.
 